<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="c43585a4-7207-4144-a409-d686ce46e01f" activeEnvironment="Default" name="LoginbuddyFakeProvider" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/Applications/SoapUI-5.4.0.app/Contents/Resources/app/bin"/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Limit" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite id="cec7d4f7-7b18-484b-a4f8-3ac3deeeab0a" name="CompleteFlowWithFakeProvider"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5bae8ed6-1bec-43ec-bb8a-956af32919c0" failOnError="true" failTestCaseOnErrors="true" keepSession="true" maxResults="0" name="Success" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="httprequest" name="client-loginbuddy-requestProviderList" id="f4974ee8-3892-4999-8e69-ce290e9dda11"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="f0816797-5bb4-411e-ab56-466ec164dc3c" name="client-loginbuddy-requestProviderList" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Client
  calls lbginbuddy to retrieve list of providers. This checks for the existence of the 'fake'
  provider for testing purposes.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_authorize}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="6b8da209-0d46-453e-afb3-d0a434a9b51f" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b8a7410e-0f24-46b2-813c-29db38945720" name="contains=&lt;html>"><con:configuration><token>&lt;html></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>state</con:name><con:value>${#Project#state}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>response_type</con:name><con:value>code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>scope</con:name><con:value>openid email profile</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="loginbuddy-getDetails" id="bff928aa-c0cd-4340-bd41-0be7ce7fe042"><con:description>Extract the 'state' parameter and get the 'action' which is the next location</con:description><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>form_action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/@action</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>loginbuddy-nextLocation</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>session</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>client-loginbuddy-requestProviderList</con:sourceStep><con:sourcePath>//form[input/@value='${#Project#provider_test}']/input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>loginbuddy-selectFakeProvider</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="loginbuddy-nextLocation" id="8861a199-87de-400d-86d7-0e98ef4fffc9"><con:description>Setting a variable to be used later as URL path</con:description><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>action</con:name><con:value>initialize</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-selectFakeProvider" id="3328560a-a037-4cbc-88ec-e641c525fb82"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="7a95031b-819e-4780-9c96-2bcc99423138" name="loginbuddy-selectFakeProvider" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Choosing
  the provider. Expects a
  redirect to the login page of the selected
  provider. Checks for required
  parameters</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}/${#action}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="3fd40551-e7ad-47cb-bb2d-f52c37bf1dc5" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8de45dc6-e7be-41d5-9d28-9ad09f0509cb" name="find 'Location' header and required parameters"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("client_id"));
    assert(location.contains("response_type=code"));
    assert(location.contains("scope=openid+profile+email"));
    assert(location.contains("nonce"));
    assert(location.contains("redirect_uri"));
    assert(location.contains("code_challenge"));
    assert(location.contains("code_challenge_method=S256"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>provider</con:name><con:value>${#Project#provider_test}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>86d8df5a-18ae-48c0-972f-1184187e17c1</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-setProviderEndpoint" id="b6c27510-5df7-4306-b6ee-7628e00947cc"><con:description>Set the endpoint for the next test step</con:description><con:settings/><con:config><script>//Find the 'Location' header of the response
  def location =
  testRunner.testCase.testSteps["loginbuddy-selectFakeProvider"].testRequest.response.responseHeaders["Location"][0]

  // Write the 'location' into the 'endpoint' of the testStep 'callProvider'
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-provider-callFakeProvider",
  "Endpoint", location.toString())</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-provider-callFakeProvider" id="1d024f7f-31e1-4fdc-b395-0fef3025e9b6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="be121e2d-1636-4a5d-ba1b-44ef31a40190" name="loginbuddy-provider-callFakeProvider" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Calls the providers authorization endpoint and receives a login page</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint><![CDATA[https://demoserver.loginbuddy.net/authorize?client_id=loginbuddy_demoId&response_type=code&scope=openid+profile+email&nonce=c3777303-5e54-48eb-97fd-94923916d3dc&redirect_uri=https%3A%2F%2Flocal.loginbuddy.net%2Fcallback&code_challenge=tZHon_qNkQmUoXX1umi7BeQ3tizbcb1eY-Z_n_XS4tY&code_challenge_method=S256&prompt=&login_hint=&id_token_hint=&state=86d8df5a-18ae-48c0-972f-1184187e17c1]]></con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="1ad74da4-00c8-49ad-a962-6cbbdae08127" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Username" id="b8a6018a-63e1-4e5e-9b92-d6db15eec2cb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>loginbuddy-provider-callFakeProvider</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-provideEmailAddress</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-provideEmailAddress" id="e8bad344-d7a4-4a5a-b433-8c36f8fb01e7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="71049774-abb4-455a-a78a-93f8b9736e24" name="provider-provideEmailAddress" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users email address to be send to the login-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding xsi:nil="true"/><con:endpoint>${#Project#host_fake_server}/login</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="ae795b15-6bbb-4dfb-ad1e-af6d33edfdd0" name="statue=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>email</con:name><con:value>${#Project#email}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>69432631-9a2c-4b0a-96b9-53a3913c82b8</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>login</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Password" id="3cb51161-ff9b-484a-a2b1-18956cd1ec71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>action</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-provideEmailAddress</con:sourceStep><con:sourcePath>//input[@name='action']/@value</con:sourcePath><con:targetType>action</con:targetType><con:targetStep>provider-providePassword</con:targetStep><con:targetPath xsi:nil="true"/><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-providePassword" id="2ac1be17-87ac-4fec-ad95-f46ebf3db658"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="e05f9780-7ac5-41be-a84b-fb2425d8b4cd" name="provider-providePassword" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Inserting
  the users password to be send to the authenticate-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/authenticate</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="26cf303b-1eb4-484c-a132-9ef38be17d3e" name="status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>password</con:name><con:value>${#Project#password}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>69432631-9a2c-4b0a-96b9-53a3913c82b8</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>action</con:name><con:value>authenticate</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="provider-getState-Grant" id="b04ffe2f-52a2-4744-9de6-4f2bb1f93634"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>state</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>provider-providePassword</con:sourceStep><con:sourcePath>//input[@name='session']/@value</con:sourcePath><con:targetType>session</con:targetType><con:targetStep>provider-grantAccess</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="httprequest" name="provider-grantAccess" id="efe7a649-a74e-448b-b961-bcf4a214a2cf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="1c1997d7-7a13-416c-a6cd-fdc2b294865c" name="provider-grantAccess" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Providing
  the users grant to be send to the consent-endpoint of the provider</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host_fake_server}/consent</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="5ab02bdb-ebc1-40a6-a242-e361e7a4e0f5" name="status=200"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>action</con:name><con:value>grant</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>session</con:name><con:value>69432631-9a2c-4b0a-96b9-53a3913c82b8</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="loginbuddy-extractLocation" id="0c18fe1b-ac77-4231-85ca-06f182ceb90a"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
  def location =
  testRunner.testCase.testSteps["provider-grantAccess"].testRequest.response.responseHeaders["Location"][0]
  def code = location =~ /code=([^&amp;]+)/;
  if (!code) {
  throw new RuntimeException("No code returned!");
  }
  def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
  groovyUtils.setPropertyValue("loginbuddy-exchangeCodeForToken", "Endpoint", location)</script></con:config></con:testStep><con:testStep type="httprequest" name="loginbuddy-exchangeCodeForToken" id="2396ab80-8116-48d3-bbfe-27396ca61588"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="loginbuddy-exchangeCodeForToken" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Forward the 'state' and 'code' to loginbuddy. Loginbuddy then calls the providers token-endpoint. It then issues its own 'code'</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>https://local.loginbuddy.net/callback?state=86d8df5a-18ae-48c0-972f-1184187e17c1&amp;code=9e095c52-0f8e-4668-ad4a-a0894b329bbc</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=302"><con:configuration><codes>302</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ccd972c0-afaf-4ae9-bd0d-69669a6fdf10" name="find: code and state"><con:configuration><scriptText>// Find the 'Location' header of the response
    assert messageExchange.responseHeaders["Location"] != null

    def location = messageExchange.responseHeaders["Location"][0]

    // Check if all expected parameters are included in the redirect_uri
    assert(location.contains("code"));
    assert(location.contains("state"));</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="soapui-extractLocation" id="32e9b2a1-fb7e-4cba-8b2e-a6458fba7275"><con:description>Extract the state </con:description><con:settings/><con:config><script>//Takes one of the elements of the response Header
def location = testRunner.testCase.testSteps["loginbuddy-exchangeCodeForToken"].testRequest.response.responseHeaders["Location"][0]
def code = location =~ /code=([^&amp;]+)/;
if (!code) {
  throw new RuntimeException("No code returned!");
}
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
groovyUtils.setPropertyValue("soapui-exchangeCodeForUserDetails", "code", code.group(1))</script></con:config></con:testStep><con:testStep type="httprequest" name="soapui-exchangeCodeForUserDetails" id="eb334346-85da-4773-976f-35b4c5a66515"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-exchangeCodeForUserDetails" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>The client uses its 'code' to retrieve the user details</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>12dac0d4-c49e-4d73-8a93-83301dc453e5</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>redirect_uri</con:name><con:value>${#Project#redirect_uri}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="soapui-codeNotTwice" id="331df15d-d684-4b84-a7a1-3e67b2195a19"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="cd652fe8-aecf-415b-87ba-8f11fe434d36" name="soapui-codeNotTwice" postQueryString="true" mediaType="application/x-www-form-urlencoded" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description>Verify that the 'code' can only be used once (here: success case)</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="cookie" value="${#jsession}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#host}${#Project#path_token}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="7476d2de-0271-444e-b51d-79a256a51538" name="http-status=400"><con:configuration><codes>400</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="77a924a6-237e-491a-810e-09d8f0b6e7f6" name="contains: expired"><con:configuration><token>expired</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>code</con:name><con:value>0dd0b004-fbb6-4587-857e-822b3255b78a</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>client_id</con:name><con:value>${#Project#client_id}</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>grant_type</con:name><con:value>authorization_code</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>host</con:name><con:value>https://local.loginbuddy.net</con:value></con:property><con:property><con:name>host_http</con:name><con:value>http://local.loginbuddy.net</con:value></con:property><con:property><con:name>redirect_uri</con:name><con:value>https://local.soapui.com/redirect</con:value></con:property><con:property><con:name>client_id</con:name><con:value>clientIdForTestingPurposes</con:value></con:property><con:property><con:name>provider_test</con:name><con:value>server_loginbuddy</con:value></con:property><con:property><con:name>host_fake_Server</con:name><con:value>https://demoserver.loginbuddy.net</con:value></con:property><con:property><con:name>email</con:name><con:value>fake@emailaddress.com</con:value></con:property><con:property><con:name>password</con:name><con:value>fakePAssword</con:value></con:property><con:property><con:name>state</con:name><con:value>sopauiFakeState</con:value></con:property><con:property><con:name>path_initialize</con:name><con:value>/initialize</con:value></con:property><con:property><con:name>path_callback</con:name><con:value>/callback</con:value></con:property><con:property><con:name>path_providers_jsp</con:name><con:value>/iapis/providers.jsp</con:value></con:property><con:property><con:name>path_error_jsp</con:name><con:value>/iapis/error.jsp</con:value></con:property><con:property><con:name>path_authorize</con:name><con:value>/authorize</con:value></con:property><con:property><con:name>path_token</con:name><con:value>/token</con:value></con:property><con:property><con:name>path_discovery</con:name><con:value>/.well-known/openid-configuration</con:value></con:property><con:property><con:name>client_secret</con:name><con:value>d5453153-e096-4672-bcb5-313d9847c8de</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>