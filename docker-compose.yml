#
# This docker compose file is an example. To make it work do the following:
#
# - create the referenced 'logibbuddy.p12' file BEFORE you use loginbuddy
# - have the key signed by a public CA (i.e.: Let's Encrypt)
# - update the 'volumes' section to map the correct p12 keystore location
#
# As long as you are in development mode, use 'docker-compose-demosetup.yml' instead. It takes care of
# creating and updating temporary keystore files.
#
# The loginbuddy wiki has instructions on how to leverage 'Let's Encrypt' for signing purposes!
#
#version: '3.4'
#services:
#  loginbuddy:
#    image: saschazegerman/loginbuddy:latest
#    restart: always
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - /opt/loginbuddy/permissions.policy:/usr/local/tomcat/webapps/ROOT/WEB-INF/classes/permissions.policy
#      - /opt/loginbuddy/config.json:/usr/local/tomcat/webapps/ROOT/classes/config.json
#      - /opt/loginbuddy/discovery.json:/usr/local/tomcat/webapps/ROOT/classes/discovery.json
#      - /opt/certs/loginbuddy.p12:/usr/local/tomcat/ssl/loginbuddy.p12
#    environment:
#      - "SSL_PWD=thepasswordfortheprivatekeythatwasmappedasvolume"